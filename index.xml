<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Hi, I'm George! on George Sudarkoff</title><link>https://george.sudarkoff.com/</link><description>Recent content in Hi, I'm George! on George Sudarkoff</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 23 Jan 2023 17:55:20 -0800</lastBuildDate><atom:link href="https://george.sudarkoff.com/index.xml" rel="self" type="application/rss+xml"/><item><title>Key Git Concepts</title><link>https://george.sudarkoff.com/posts/key-git-concepts/</link><pubDate>Mon, 23 Jan 2023 20:46:53 -0800</pubDate><guid>https://george.sudarkoff.com/posts/key-git-concepts/</guid><description>Understanding a few key concepts will help you make sense of how Git works and how to use it effectively.
Full history With Git, every repository contains a full copy of the project history, and no repository is inherently more important than any other.
Content-addressable Git stores content in files with names that are 40-hexdigit (160-bit) SHA1 hashes. This has some interesting implications. It means for example that Git will never store the same data twice within a repository because identical data would have identical SHA1 hashes and therefore be stored in the same file.</description></item></channel></rss>