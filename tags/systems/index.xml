<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Systems on George Sudarkoff</title><link>https://george.sudarkoff.com/tags/systems/</link><description>Recent content in Systems on George Sudarkoff</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Mon, 15 Sep 2014 12:00:00 -0800</lastBuildDate><atom:link href="https://george.sudarkoff.com/tags/systems/index.xml" rel="self" type="application/rss+xml"/><item><title>Scripting versus automation</title><link>https://george.sudarkoff.com/posts/scripting-vs-automation/</link><pubDate>Mon, 15 Sep 2014 12:00:00 -0800</pubDate><guid>https://george.sudarkoff.com/posts/scripting-vs-automation/</guid><description>&lt;p>&lt;em>This was originally shared with the engineering org of a company I worked for at the time. It&amp;rsquo;s my stream of consciousness about the type of system my team was building at the time. Reproducing here without modifications, enjoy the chaos of my unedited remblings.&lt;/em>&lt;/p>
&lt;p>Team,&lt;/p>
&lt;p>It became clear to me in the last few days that there&amp;rsquo;s not enough clarity about what we&amp;rsquo;re trying to build.&lt;/p>
&lt;p>We keep talking about relatively small and specific things, but we never discuss the philosophy behind it all. What type of system are we building? Can&amp;rsquo;t we just install Puppet and Terraform and call it done? And focus instead on something more glamorous than spinning VMs?&lt;/p></description></item></channel></rss>